# -*- coding: utf-8 -*-
"""Copy of Bikeshare DIDA 325 Project.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1u6NXe6isIUFmZN6w_t1lViY_Ffu2ly3n

**Team: Shane,Jesse,Maribela,Yining**
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

import statsmodels.api as sm
import geopandas as gpd

from google.colab import files
uploaded = files.upload()

bikeshare = pd.read_csv("NYC-BikeShare-2015-2017-combined-1.csv")
bikeshare.head()

text = bikeshare.select_dtypes(include=['object', 'string']).columns
numeric = bikeshare.select_dtypes(include=['number']).columns
categorical = bikeshare.select_dtypes(include=['category', 'object']).columns
categorical

bikeshare.drop(["Unnamed: 0", "Start Station ID", "End Station ID", "Trip_Duration_in_min"], axis=1, inplace=True)
bikeshare.dropna()

#Converting trip duration into usable form
bikeshare['Trip Duration in Minutes'] = bikeshare['Trip Duration'] / 60
bikeshare.drop(['Trip Duration'], axis=1, inplace=True)
bikeshare.head()



"""# **Introduction**

Our analysis is being done on behalf of the New York City Department of Transportation (DoT), who seek to promote sustainable, eco-friendly transportation methods, such as Bikeshare. The DoT would like to better understand the bikeshare program and how it can be optimized in order to accomplish their goal.

# **Dataset Description**

This data comes from Citi Bikes' website. It is the property of NYC Bike Share, LLC and Jersey City Bike Share, LLC (“Bikeshare”).

* Trip Duration: numerical column, represents the length of the riders' trip in seconds.
* Start time: text column that contains the year, month, day, and time that the user began their ride.
* Stop time: text column that contains the year, month, day, and time that the user completed their ride.
* Start Station ID: numerical, contains a unique 4 digit number that identifies where the user began their trip.
* Start Station Name: text, gives the name of the location that the user began their trip. Tied to Start/End Station ID.
* Start Station Latitude: numeric, gives us the latitude that the user began their trip.
* Start Station Longitude: numeric, gives us the longitude that the user ended their trip.
* End Station ID: numerical, contains a unique 4 digit number that identifies where the user began their trip. IDs are Shared with Start Station ID.
* End Station Name: text, tells us the location where the user ended their trip.
*End Station Latitude: numeric, tells us the latitude that the user ended their trip.
* End Station Longitude: numeric, tells us the longitude that the user ended their trip.
* Bike ID: numeric, unique set of numbers that identifies the specific bike used.
* User type: categorical, Customer indicates a 24 hour or 3 day pass user, while Subscriber indicates an annual member.
* Birth Year: numeric, gives us the year that the rider was born in.
* Gender: categorical, tells us the gender of the rider. 0=unknown, 1=male, and 2=female.
* Trip_Duration_in_min: numeric, tells us how many minutes the user rode for in a given trip. (Not as precise as the Trip Duration column)

Research questions:
"""

#Can the number of rides throughout the year be explored from this data set?(METHOD: Data visualization)
#Does the age of riders impact the amount of time spent on rides?
#
#What are the differences in environmental contributions between different user types (Customer vs. Subcriber) in the bikeshare program?(METHOD: regrssion)
#Are we able to accurately predict bike share demand in different areas by using our data? (METHOD: data visualization)

"""# **Analysis**"""

bikeshare['Start Time']= pd.to_datetime(bikeshare['Start Time'])
bikeshare['Time']= bikeshare['Start Time'].dt.time
bikeshare['Date']= bikeshare['Start Time'].dt.date
bikeshare.head()

#Question 1
sns.histplot(bikeshare, x="Date", binwidth=2)
plt.xlabel("Date Bikeshare Was Used")
plt.ylabel("Number of Trips Per Day")
plt.title("Daily Activity of Bikeshare Users Throughout 2 Years")

"""Using this data, the Department of Transportation (DoT) can better understand the usage patterns of different demographics, which could inform targeted services or resource allocation. It shows that Subscribers take shorter, more consistent trips and Customers tend to show higher variability in trip duration.

**Question 3: Can we predict distance so that we area able place share bike station in a more optimal way**
"""

#Question 3
def haversine(lat1, lon1, lat2, lon2):

    lat1_rad = np.radians(lat1)
    lon1_rad = np.radians(lon1)
    lat2_rad = np.radians(lat2)
    lon2_rad = np.radians(lon2)

    d_lat = lat2_rad - lat1_rad
    d_lon = lon2_rad - lon1_rad
    R = 6371000

    a = np.sin(d_lat / 2)**2 + np.cos(lat1_rad) * np.cos(lat2_rad) * np.sin(d_lon / 2)**2
    c = 2 * np.arcsin(np.sqrt(a))
    distance = R * c
    return distance

bikeshare['distance(m)'] = haversine(bikeshare['Start Station Latitude'],
                                        bikeshare['Start Station Longitude'],
                                        bikeshare['End Station Latitude'],
                                        bikeshare['End Station Longitude'])

X = bikeshare.drop(["distance(m)", "Start Time", "Stop Time","Start Station Name","End Station Name", "Time", "Bike ID","Start Station Latitude","Start Station Longitude",	"End Station Latitude",	"End Station Longitude"]), axis=1
y = bikeshare["distance(m)"].astype("float32")

X = sm.tools.tools.add_constant(X)

model = sm.OLS(y, X).fit()

print(model.summary())



"""**Question 4: Are we able to predict bike demand in different areas using our data? What are the most popular stations for bikers to commute to/from?**"""

#Grouping start/end stations to find total traffic at different stations
stationcounts = bikeshare.groupby('Start Station Name')['End Station Name'].count().sort_values(ascending=False).reset_index()

stationcounts.head(3)

"""**Graphing the Data**"""

plt.figure(figsize=(12,8))
sns.barplot(data=stationcounts, x= "Start Station Name", y="End Station Name")
plt.xticks(rotation=45,ha='right')
plt.xlabel("Station Names")
plt.ylabel("Count")
plt.title("Number of Rides Starting and Ending at Different Stations")
plt.show()

"""**Question 4 Analysis**

The barplot above shows us the number of rides that started or ended at specific stations. This gives us insight into which stations are most popular for riders. Using this data, the DoT can anticipate which stations will experience high traffic, and, thus, a greater demand for readily available bikes. We can see that Grove St PATH is the most common station for riders to commute to/from by a large margin. The DoT should ensure these stations/areas have a sufficient bike supply.

**Conclusion**

Our research certainly could stand to benefit the DoT in their efforts to promote eco-friendly transportation methods such as Bikeshare. Harnessing the data within this dataset produces very apparent trends in demand and user behavior. In ensuring that the Bikeshare program is optimized and convenient, (by ensuring proper stock, for instance) it will naturally gain popularity, effectively accomplishing the DoT's goal.
"""